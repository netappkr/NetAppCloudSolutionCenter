{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "prefix": {
            "defaultValue": "SpotAdmin",
            "type": "string"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Specifies the location."
            }
        }
    },
    "variables": {
        "Vnet_name": "[concat(parameters('prefix'),'-Vnet')]",
        "ALL_Allow_NSG": "[concat(parameters('prefix'),'-ALL_Allow-NSG')]",
        "Bastion_VM_name": "[concat(parameters('prefix'),'-Bastion-vm')]",
        "Bastion_vm_pip_name": "[concat(parameters('prefix'),'-Bastion-vm-ip')]",
        "Bastion_vm_nic": "[concat(parameters('prefix'),'-bastion-nic')]",
        "Bastion_vm_nsg_name": "[concat(parameters('prefix'),'-Bastion-nsg')]",
        "LB_name": "[concat(parameters('prefix'),'-LB')]",
        "LB_PIP_name": "[concat(parameters('prefix'),'-LB-PIP')]",
        "VMSS_PIP_name": "[concat(parameters('prefix'),'-VMSS-ip')]",
        "VMSS_name": "[concat(parameters('prefix'),'-VMSS')]",
        "NAT_name": "[concat(parameters('prefix'),'-NAT')]",
        "NAT_PIP_name": "[concat(parameters('prefix'),'-NAT-PIP')]",
        "NAT_CIDR_name": "[concat(parameters('prefix'),'-NAT-CIDR')]",
        "sshRSAPublicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAvu2v6lkF59XSY3ch+Df2w/AN10EPXZ3JL2Xbqtsv13xVq9ZuzmUcdCpfa9NyjnyBoaXxymUvQSaeQCFxnjroAySOKVXaR6n6ahWFGQOYlfZHkKYg/N8pTpQht3QXNLoA8lUlrb3lyehQHxtCAhtgmx4BIaBpGM/FLaJqhu1OQ7gz0GBbG1qZOmEyrzcklkvriyPYzEESg3N9w+eM09rWvu3dK+EezAsgeFBlcsfHY5eNRmgp2iPfvz8tNZ3wgsrU/UiZHueqsMmGYS+Njjr461cx2q3EhjjPbYz8+tj3t/taZ/Jf419r9ZhT1JHm8/vUh22B5Xm31LdbMBPGvuUKPQ==",
        "clusterName": "[concat(parameters('prefix'),'-AKS')]",
        "linuxAdminUsername": "azureuser",
        "customData": "#!/bin/bash \n curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash \n wget https://github.com/NetApp/trident/releases/download/v22.07.0/trident-installer-22.07.0.tar.gz \n tar -zxvf trident-installer-22.07.0.tar.gz -C /opt \n sudo cp /opt/trident-installer/tridentctl /usr/local/bin \n sudo apt-get -y install nfs-common \n sudo apt-get -y install unzip \n wget https://netappkr-wyahn-s3.s3.ap-northeast-2.amazonaws.com/public/DeployTestapp.zip \n sudo unzip DeployTestapp.zip -d /opt/DeployTestapp \n apt-get install -y jq \n sudo wget -P /opt/ https://hey-release.s3.us-east-2.amazonaws.com/hey_linux_amd64 \n sudo mv /opt/hey_linux_amd64 /usr/local/bin/hey \n sudo chmod 755 /usr/local/bin/hey",
        "customData2": "#!/bin/bash \n sudo yum -y install unzip \n sudo yum -y install httpd \n yum -y install nfs-utils \n wget https://netappkr-wyahn-s3.s3.ap-northeast-2.amazonaws.com/public/sneat-1.0.0.zip \n sudo unzip sneat-1.0.0.zip -d /var/www/html/ \n sudo systemctl start httpd"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "metadata": {
                "description": "모두 허용"
            },
            "apiVersion": "2022-07-01",
            "name": "[variables('ALL_Allow_NSG')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow_ALL_Inbound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "metadata": {
                "description": "베스천호스트 Public IP"
            },
            "apiVersion": "2022-07-01",
            "name": "[variables('Bastion_vm_pip_name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "metadata": {
                "description": "NAT Public IP"
            },
            "apiVersion": "2022-07-01",
            "name": "[variables('NAT_PIP_name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPPrefixes",
            "metadata": {
                "description": "NAT public IP CIDR"
            },
            "apiVersion": "2022-07-01",
            "name": "[variables('NAT_CIDR_name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "prefixLength": 31,
                "publicIPAddressVersion": "IPv4"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "metadata": {
                "description": "부하분산기 Public IP"
            },
            "apiVersion": "2022-07-01",
            "name": "[variables('LB_PIP_name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "metadata": {
                "description": "가상머신 스케일 셋 Public IP"
            },
            "apiVersion": "2022-07-01",
            "name": "[variables('VMSS_PIP_name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/natGateways",
            "metadata": {
                "description": "NAT GW"
            },
            "apiVersion": "2022-07-01",
            "name": "[variables('NAT_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('NAT_PIP_name'))]",
                "[resourceId('Microsoft.Network/publicIPPrefixes', variables('NAT_CIDR_name'))]"
            ],
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "idleTimeoutInMinutes": 4,
                "publicIpAddresses": [
                    {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('NAT_PIP_name'))]"
                    }
                ],
                "publicIpPrefixes": [
                    {
                        "id": "[resourceId('Microsoft.Network/publicIPPrefixes', variables('NAT_CIDR_name'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "metadata": {
                "description": "가상 네트워크"
            },
            "apiVersion": "2022-07-01",
            "name": "[variables('Vnet_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/natGateways', variables('NAT_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.18.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "metadata": {
                "description": "Public IP 할당 할 서브넷"
            },
            "apiVersion": "2022-07-01",
            "name": "[concat(variables('Vnet_name'), '/PublicSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('Vnet_name'))]",
                "[resourceId('Microsoft.Network/natGateways', variables('NAT_name'))]"
            ],
            "properties": {
                "addressPrefix": "172.18.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "metadata": {
                "description": "VMSS 할당할 Private 서브넷 "
            },
            "apiVersion": "2022-07-01",
            "name": "[concat(variables('Vnet_name'), '/PrivateSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('Vnet_name'))]",
                "[resourceId('Microsoft.Network/natGateways', variables('NAT_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('Vnet_name'), 'PublicSubnet')]"
            ],
            "properties": {
                "addressPrefix": "172.18.1.0/24",
                "natGateway": {
                    "id": "[resourceId('Microsoft.Network/natGateways', variables('NAT_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "metadata": {
                "description": "AKS Node 할당할 Private 서브넷 "
            },
            "apiVersion": "2022-07-01",
            "name": "[concat(variables('Vnet_name'), '/AKSsubent')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('Vnet_name'))]",
                "[resourceId('Microsoft.Network/natGateways', variables('NAT_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('Vnet_name'), 'PrivateSubnet')]"
            ],
            "properties": {
                "addressPrefix": "172.18.2.0/24",
                "natGateway": {
                    "id": "[resourceId('Microsoft.Network/natGateways', variables('NAT_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-07-01",
            "metadata": {
                "description": "Azure Netapp Files 배포할 서브넷 + Nat 연결"
            },
            "name": "[concat(variables('Vnet_name'), '/ANFsubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('Vnet_name'))]",
                "[resourceId('Microsoft.Network/natGateways', variables('NAT_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('Vnet_name'), 'AKSsubent')]"
            ],
            "properties": {
                "addressPrefix": "172.18.3.0/24",
                "serviceEndpoints": [],
                "delegations": [
                    {
                        "name": "Microsoft.Netapp.volumes",
                        "properties": {
                            "serviceName": "Microsoft.Netapp/volumes"
                        }
                    }
                ],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "metadata": {
                "description": "베스천 호스트 보안 그룹"
            },
            "apiVersion": "2022-07-01",
            "name": "[variables('Bastion_vm_nsg_name')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "HTTP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 320,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "HTTPS",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 340,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                                        {
                        "name": "Vnet_Allow",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "172.18.0.0/16",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 360,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "metadata": {
                "description": "베스천 호스트 네트워크 인터페이스"
            },
            "apiVersion": "2022-07-01",
            "name": "[variables('Bastion_vm_nic')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('Bastion_vm_pip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('Vnet_name'), 'PublicSubnet')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('Bastion_vm_nsg_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('Bastion_vm_pip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('Vnet_name'), 'PublicSubnet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('Bastion_vm_nsg_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-08-01",
            "name": "[variables('Bastion_VM_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('Bastion_vm_nic'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('Bastion_vm_pip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('Vnet_name'), 'PublicSubnet')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('Bastion_vm_nsg_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "canonical",
                        "offer": "0001-com-ubuntu-server-focal",
                        "sku": "20_04-lts-gen2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(variables('Bastion_VM_name'), '_OsDisk')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        },
                        "deleteOption": "Delete",
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[variables('Bastion_VM_name')]",
                    "adminUsername": "azureuser",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "/home/azureuser/.ssh/authorized_keys",
                                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAvu2v6lkF59XSY3ch+Df2w/AN10EPXZ3JL2Xbqtsv13xVq9ZuzmUcdCpfa9NyjnyBoaXxymUvQSaeQCFxnjroAySOKVXaR6n6ahWFGQOYlfZHkKYg/N8pTpQht3QXNLoA8lUlrb3lyehQHxtCAhtgmx4BIaBpGM/FLaJqhu1OQ7gz0GBbG1qZOmEyrzcklkvriyPYzEESg3N9w+eM09rWvu3dK+EezAsgeFBlcsfHY5eNRmgp2iPfvz8tNZ3wgsrU/UiZHueqsMmGYS+Njjr461cx2q3EhjjPbYz8+tj3t/taZ/Jf419r9ZhT1JHm8/vUh22B5Xm31LdbMBPGvuUKPQ=="
                                }
                            ]
                        },
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault",
                            "assessmentMode": "ImageDefault"
                        }
                    },
                    "customData": "[base64(variables('customData'))]",
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('Bastion_vm_nic'))]",
                            "properties": {
                                "deleteOption": "Delete"
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.ContainerService/managedClusters",
            "apiVersion": "2022-07-01",
            "name": "[variables('clusterName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('Vnet_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('Vnet_name'), 'PublicSubnet')]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('Vnet_name'), 'AKSsubent')]"
            ],
            "location": "[parameters('location')]",
            "sku": {
                "name": "Basic",
                "tier": "Free"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "kubernetesVersion": "1.25.2",
                "dnsPrefix": "[concat(variables('clusterName'), '-dns')]",
                "networkProfile": {
                    "networkPlugin": "azure",
                    "serviceCidr": "10.0.0.0/16",
                    "dnsServiceIP": "10.0.0.10",
                    "dockerBridgeCidr": "172.17.0.1/16"
                },
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "count": 1,
                        "vmSize": "Standard_B2ms",
                        "osDiskSizeGB": 30,
                        "osDiskType": "Managed",
                        "kubeletDiskType": "OS",
                        "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('Vnet_name'), 'AKSsubent')]",
                        "maxPods": 30,
                        "type": "VirtualMachineScaleSets",
                        "availabilityZones": [
                            "1",
                            "2",
                            "3"
                        ],
                        "enableAutoScaling": false,
                        "powerState": {
                            "code": "Running"
                        },
                        "enableNodePublicIP": false,
                        "mode": "System",
                        "osType": "Linux",
                        "osSKU": "Ubuntu",
                        "enableFIPS": false
                    },
                    {
                        "name": "userpool",
                        "count": 1,
                        "vmSize": "Standard_B2ms",
                        "osDiskSizeGB": 30,
                        "osDiskType": "Managed",
                        "kubeletDiskType": "OS",
                        "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('Vnet_name'), 'AKSsubent')]",
                        "maxPods": 30,
                        "type": "VirtualMachineScaleSets",
                        "enableAutoScaling": false,
                        "powerState": {
                            "code": "Running"
                        },
                        "enableNodePublicIP": false,
                        "enableCustomCATrust": false,
                        "nodeLabels": {
                            "purpose": "test"
                        },
                        "mode": "User",
                        "osType": "Linux",
                        "osSKU": "Ubuntu",
                        "enableFIPS": false
                    }
                ],
                "linuxProfile": {
                    "adminUsername": "[variables('linuxAdminUsername')]",
                    "ssh": {
                        "publicKeys": [
                            {
                                "keyData": "[variables('sshRSAPublicKey')]"
                            }
                        ]
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2022-07-01",
            "name": "[variables('LB_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('LB_PIP_name'))]"
            ],
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[concat(variables('LB_name'), '-IPconf')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('LB_PIP_name'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "SpotAdmin-bg"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "default-LB-Role",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('LB_name')), concat('/frontendIPConfigurations/', variables('LB_name'), '-IPconf'))]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "disableOutboundSnat": true,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('LB_name'), 'SpotAdmin-bg')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('LB_name')), '/probes/http-sneat')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "http-sneat",
                        "properties": {
                            "protocol": "Http",
                            "port": 80,
                            "requestPath": "/sneat-1.0.0/html/index.html",
                            "intervalInSeconds": 5,
                            "numberOfProbes": 1
                        }
                    }
                ],
                "inboundNatRules": [],
                "outboundRules": [],
                "inboundNatPools": []
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/backendAddressPools",
            "apiVersion": "2022-07-01",
            "name": "[concat(variables('LB_name'), '/SpotAdmin-bg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', variables('LB_name'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "2022-03-01",
            "name": "[variables('VMSS_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('ALL_Allow_NSG'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('Vnet_name'), 'PrivateSubnet')]",
                "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('LB_name'), 'SpotAdmin-bg')]"
            ],
            "sku": {
                "name": "Standard_B2ms",
                "tier": "Standard",
                "capacity": 2
            },
            "properties": {
                "singlePlacementGroup": false,
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "scaleInPolicy": {
                    "rules": [
                        "Default"
                    ]
                },
                "virtualMachineProfile": {
                    "osProfile": {
                        "computerNamePrefix": "[variables('VMSS_name')]",
                        "adminUsername": "azureuser",
                        "customData": "[base64(variables('customData2'))]",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "/home/azureuser/.ssh/authorized_keys",
                                        "keyData": "[variables('sshRSAPublicKey')]"
                                    }
                                ]
                            },
                            "provisionVMAgent": true
                        },
                        "secrets": [],
                        "allowExtensionOperations": true
                    },
                    "storageProfile": {
                        "osDisk": {
                            "osType": "Linux",
                            "createOption": "FromImage",
                            "caching": "ReadWrite",
                            "managedDisk": {
                                "storageAccountType": "Standard_LRS"
                            },
                            "diskSizeGB": 30
                        },
                        "imageReference": {
                            "publisher": "OpenLogic",
                            "offer": "CentOS",
                            "sku": "7_9-gen2",
                            "version": "latest"
                        }
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat(variables('VMSS_name'),'-NICconf')]",
                                "properties": {
                                    "primary": true,
                                    "enableAcceleratedNetworking": false,
                                    "networkSecurityGroup": {
                                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('ALL_Allow_NSG'))]"
                                    },
                                    "dnsSettings": {
                                        "dnsServers": []
                                    },
                                    "enableIPForwarding": false,
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat(variables('VMSS_name'),'-IPconf')]",
                                            "properties": {
                                                "primary": true,
                                                "subnet": {
                                                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('Vnet_name'), 'PrivateSubnet')]"
                                                },
                                                "privateIPAddressVersion": "IPv4",
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('LB_name'), 'SpotAdmin-bg')]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "diagnosticsProfile": {
                        "bootDiagnostics": {
                            "enabled": true
                        }
                    },
                    "extensionProfile": {
                        "extensions": []
                    }
                },
                "overprovision": false,
                "doNotRunExtensionsOnOverprovisionedVMs": false,
                "platformFaultDomainCount": 1
            }
        }
    ]
}